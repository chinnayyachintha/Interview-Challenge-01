# name: Deploy Infra to AWS Production

# on:
#   push:
#     branches: [main]
#   workflow_dispatch:

# env:
#   TF_WORKING_DIR: terraform/prod
#   AWS_REGION: us-west-2

# jobs:
#   deploy-prod:
#     name: Terraform Deploy to Prod
#     runs-on: ubuntu-latest
#     environment: production

#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       - name: Set up Terraform
#         uses: hashicorp/setup-terraform@v3
#         with:
#           terraform_version: 1.5.7

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v2
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
#           aws-region: ${{ env.AWS_REGION }}

#       - name: Terraform Init
#         working-directory: ${{ env.TF_WORKING_DIR }}
#         run: terraform init

#       - name: Terraform Validate
#         working-directory: ${{ env.TF_WORKING_DIR }}
#         run: terraform validate

#       - name: Terraform Plan
#         working-directory: ${{ env.TF_WORKING_DIR }}
#         run: terraform plan -out=tfplan

#       - name: Terraform Apply
#         working-directory: ${{ env.TF_WORKING_DIR }}
#         run: terraform apply -auto-approve tfplan

#       - name: Slack Notification - Success
#         if: success()
#         uses: slackapi/slack-github-action@v1.25.0
#         with:
#           payload: |
#             {
#               "text": ":white_check_mark: *Production Infrastructure Deployment* succeeded :rocket:"
#             }
#         env:
#           SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

#       - name: Slack Notification - Failed
#         if: failure()
#         uses: slackapi/slack-github-action@v1.25.0
#         with:
#           payload: |
#             {
#               "text": ":x: *Production Infrastructure Deployment* failed. Please check the logs."
#             }
#         env:
#           SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
