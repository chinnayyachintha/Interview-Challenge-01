name: Deploy Microservice Infra

on:
  workflow_dispatch:
    inputs:
      service:
        description: 'Choose a microservice to deploy'
        required: true
        type: choice
        options:
          - backend-support
          - base
          - interviewee
          - news

      environment:
        description: 'Select deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging
          - dev

      aws_region:
        description: 'AWS Region'
        required: true
        default: 'us-west-2'

      auto_apply:
        description: 'Auto-approve Terraform Apply?'
        required: true
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'

env:
  AWS_REGION: ${{ github.event.inputs.aws_region }}

jobs:
  deploy:
    name: Deploy ${{ github.event.inputs.service }} to ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Print Runner Hostname
        run: hostname
        shell: bash

      - name: Print Runner IP Address
        run: curl -sL https://ipconfig.io
        shell: bash

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ github.event.inputs.service }}

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: ${{ github.event.inputs.service }}

      - name: Terraform Apply
        if: ${{ github.event.inputs.auto_apply == 'true' }}
        run: terraform apply -auto-approve tfplan
        working-directory: ${{ github.event.inputs.service }}

      - name: Terraform Destroy
        if: ${{ github.event.inputs.auto_apply == 'true' }}
        run: terraform destroy -auto-approve
        working-directory: ${{ github.event.inputs.service }}

      - name: Manual Apply Reminder
        if: ${{ github.event.inputs.auto_apply == 'false' }}
        run: echo "Terraform apply skipped. Please review the plan and apply manually."
